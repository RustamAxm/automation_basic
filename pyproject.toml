[project]
name = "automation-basic"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "loguru>=0.7.3",
    "numpy>=2.2.4",
    "poethepoet>=0.33.1",
    "pyserial>=3.5",
    "pytest>=8.3.5",
    "pyzmq>=26.4.0",
    "ruff>=0.11.6",
    "sphinx-automodapi>=0.18.0",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-simplepdf>=1.6.0",
    "sphinx>=8.2.3",
    "sphinxcontrib-bibtex>=2.6.3",
]

[tool.poe.tasks]
html.shell = """rm -fr docs/build &&
                uv run sphinx-build -M html docs/source docs/build"""
pdf.shell = "rm -fr docs/build && uv run sphinx-build -M simplepdf docs/source docs/build"
api-rst.shell = "rm -fr docs/source/api && uv run sphinx-apidoc -o docs/source/api automation_basics/"
test-demo.shell = "pytest -vs --junitxml=test-results/$(date '+%F_s%s').xml automation_basics/test_demo/ "
create-com.shell = "socat -d -d pty,raw,echo=0,link=/tmp/ttyV0 pty,raw,echo=0,link=/tmp/ttyV1"

[project.scripts]
simple = "automation_basics.simple_functions.main:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vvs"
testpaths = [
    "automation_basics/test_demo",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ['UP012']

[tool.hatch.build.targets.wheel]
packages = ["automation_basics"]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
fallback-version = "0.0.0"

